X11R5 builds on Mips machines only under the BSD environment, not the
System V environment.  This patch (below) attempts to modify Mips.cf so
that imake and makedepend can be used under the System V environment as
well (not for building X, of course, but for building non-X programs
configured with the X configuration files).

Note that this patch has not been well-tested, and the problems it attempts
to solve are ugly.

Problems:

1) The include hierarchy root is /usr/include for the System V environment
and /bsd43/usr/include for the BSD environment.  Similarly, the library
directories are /usr/lib and /bsd43/usr/lib.  The latter can be taken
care of by making sure the compiler knows which environment it's to
conform to, by passing -systype sysv or -systype bsd43 on the command
line.

The compiler will also look in the correct header file directory when
processing #include directives.  However, for generating header file
dependencies, the include hierarchy root must be passed explicitly to
makedepend, since makedepend knows nothing about any -systype
conventions (and makedepend gets confused about the argument following
-systype, anyway).  The include hierarchy root is passed by setting
StandardIncludes to the proper directory.  Eventually StandardIncludes
becomes part of the value of ALLDEFINES, which is passed to makedepend
by DependTarget().

2) Other configuration parameters vary when you use the System V environment.
Signal semantics differ, for instance.

3) Pre-4.50 versions of RISC/os don't have the v?printf() functions in the
C library.  This patch corrects for that by adding -ltermcap to ExtraLibraries
(the v?printf functions are in -ltermcap)

4) InstallCmd is defined in terms of ETCDIR, which is nowhere defined in
the configuration files.  That's fixed here.  mipsinstall also needs -f.

Apply the patch using the following command in the config directory:

	% patch < thisfile

Then make sure the OS version numbers are correct for your system.

To build for the BSD environment, use this command in the distribution root:

	% make World BOOTSTRAPCFLAGS="-DMips -DBSD43" >& make.world

To build for the System V environment, do this instead:

	% make World BOOTSTRAPCFLAGS="-DMips -DSYSV" >& make.world

Unfortunately, although you can do this for either environment, you can't
easily build the distribution for one environment and then use it later
to configure projects for the other environment.

After you apply the patch, go into util/scripts/Imakefile and change
CONFIGROOTDIR to /usr/lib/config - it's defined in terms of USRLIBDIR
by default, which differs according to the compilation environment.  However,
you want the config root dir NOT to change like that, so use a literal
"/usr/lib" in the value of CONFIGROOTDIR.


*** Mips.cf.orig	Sun Feb 21 09:46:54 1993
--- Mips.cf	Fri Apr 16 17:05:28 1993
***************
*** 5,38 ****
   * sure your path includes /bsd43/bin before /bin/ or /usr/bin.
   */
  
  #define OSName            RISCOS
  #define OSMajorVersion    4
! #define OSMinorVersion    50
  
! /**/# platform:  $XConsortium: Mips.cf,v 1.10 91/07/30 20:47:59 rws Exp $
! /**/# operating system:  OSName
  
  /*****************************************************************************
   *			  Platform-specific parameters                       *
   *****************************************************************************/
  
! #define HasVoidSignalReturn		NO
  #define SetTtyGroup			YES
  #define UnalignedReferencesAllowed	NO     /* if arbitrary deref is okay */
  #define HasBsearch			NO
  
  #define MipsArchitecture
  #define MakeEnv -e
  
! #define DefaultCCOptions -signed -systype bsd43 -Olimit 2000 -Wf,-XNd8400,-XNp12000
! #define StandardDefines -DMips -DBSD43
  #define ExtraLibraries -lmld
  #define ArCmd ar clr
! #define BootstrapCFlags -DMips
! #define InstallCmd $(ETCDIR)/mipsinstall
  #define MakeCmd make MakeEnv
  #define DoRanlibCmd 0
  #define AllocateLocalDefines -DINCLUDE_ALLOCA_H
  
  /*****************************************************************************
   *                                                                           *
--- 5,136 ----
   * sure your path includes /bsd43/bin before /bin/ or /usr/bin.
   */
  
+ /*
+  * The include hierarchy root must be passed explicitly to makedepend,
+  * because although the compiler will correctly figure out whether to
+  * use /usr/include or /bsd43/usr/include based on whether -systype sysv
+  * or -systype bsd43 are present on the command line, makedepend knows
+  * nothing about any such convention (and makedepend gets confused about
+  * the argument following -systype, anyway).
+ */
+ 
  #define OSName            RISCOS
  #define OSMajorVersion    4
! #define OSMinorVersion    01
  
! XCOMM platform:  $XConsortium: Mips.cf,v 1.10 91/07/30 20:47:59 rws Exp $
! XCOMM operating system:  OSName
  
  /*****************************************************************************
   *			  Platform-specific parameters                       *
   *****************************************************************************/
  
! 
! #ifndef SystemV
! #ifdef SYSV
! #define SystemV			YES	/* need System V style */
! #else
! #define SystemV			NO	/* need BSD style */
! #endif
! #endif
! 
! /* Signal semantics depend on compilation environment.  */
! 
! #ifndef HasVoidSignalReturn
! #if SystemV
! #define	HasVoidSignalReturn	YES
! #else
! #define	HasVoidSignalReturn	NO
! #endif
! #endif
! 
  #define SetTtyGroup			YES
  #define UnalignedReferencesAllowed	NO     /* if arbitrary deref is okay */
  #define HasBsearch			NO
+ /*
+  * default for ExecableScripts is NO when SystemV is YES; but on Mips
+  * machines, scripts are execable regardless of environment
+  */
+ #ifndef ExecableScripts
+ #define ExecableScripts	YES
+ #endif
  
  #define MipsArchitecture
  #define MakeEnv -e
  
! #define DefaultCCOptions -signed -Olimit 2000 -Wf,-XNd8400,-XNp12000
! 
! #ifndef StandardCppDefines
! #if SystemV
! #define StandardCppDefines -DMips -DSYSV
! #else
! #define StandardCppDefines -DMips -DBSD43
! #endif
! #endif
! 
! #define StandardDefines StandardCppDefines
! 
! /*
!  * For BSD environment, need -ltermcap for v?printf.  It's not in
!  * the BSD C library in releases of RISC/os prior to 4.50.
!  */
! #ifndef ExtraLibraries
! #if SystemV
  #define ExtraLibraries -lmld
+ #else
+ #if OSMajorVersion > 4 || (OSMajorVersion == 4 && OSMinorVersion >= 50)
+ #define ExtraLibraries -lmld
+ #else
+ #define ExtraLibraries	-lmld -ltermcap
+ #endif
+ #endif
+ #endif
+ 
  #define ArCmd ar clr
! 
! #ifndef BootstrapCFlags
! #if SystemV
! #define BootstrapCFlags	-DMips -DSYSV
! #else
! #define BootstrapCFlags	-DMips -DBSD43
! #endif
! #endif
! 
! #define InstallCmd /etc/mipsinstall -f
  #define MakeCmd make MakeEnv
  #define DoRanlibCmd 0
  #define AllocateLocalDefines -DINCLUDE_ALLOCA_H
+ 
+ #ifndef CcCmd
+ #if SystemV
+ #define CcCmd cc -systype sysv
+ #else
+ #define CcCmd cc -systype bsd43
+ #endif
+ #endif
+ 
+ #ifndef UsrLibDir
+ #if SystemV
+ #define UsrLibDir /usr/lib
+ #else
+ #define UsrLibDir /bsd43/usr/lib
+ #endif
+ #endif
+ 
+ /* don't want this to depend on UsrLibDir... */
+ #ifndef LibDir
+ #define LibDir /usr/lib/X11
+ #endif
+ 
+ #ifndef IncRoot
+ #if SystemV
+ #define IncRoot /usr/include
+ #else
+ #define IncRoot /bsd43/usr/include
+ #endif
+ #endif
+ 
+ #define StandardIncludes -I${INCROOT}
  
  /*****************************************************************************
   *                                                                           *
