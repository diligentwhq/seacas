XCOMM $Id: crosslinux.cf,v 1.3 2005/11/15 22:52:54 gdsjaar Exp $
XCOMM
XCOMM README:
XCOMM   This config file is a work in progress. It has been tested on
XCOMM
XCOMM --RedHat 5.1/Intel (kernel 2.0.34, 2.0.35, 2.0.36, 2.2.1-2.2.5)
XCOMM   using several compilers:
XCOMM       gcc, g++, g77 (egcs-1.1.X releases)	         [GCCG77]
XCOMM       gcc, g++, fort77(f2c) (egcs-1.1.X releases)  [GCCF2C]
XCOMM       pgcc, pgCC, pgf77 (Portland Group)           [PORTLAND]
XCOMM
XCOMM   Pronto3D and Jas3D require a Fortran90 compiler. 
XCOMM   The ones that we have used are:
XCOMM       pgf90 -- Portland Group -- no changes required
XCOMM       f90   -- VAST -- requires some changes
XCOMM
XCOMM --'Unknown/Alpha' (CPLANT)
XCOMM       compaq fort (f77 and f90), gcc, g++          [GCCFORT]
XCOMM
XCOMM **** If PentiumII or Pentium Pro system, see OptimizedCDebugFlags flag
XCOMM
XCOMM **** Default compiler set is 'GCCG77' -- gcc, g++, g77, no Fortran 90

XCOMM NOTE: It is assumed that you are using a recent version of linux
XCOMM       (kernel version 2.0.0 or newer)
XCOMM
XCOMM NOTE: This was copied from the X11 distribution and modified. 
XCOMM       It includes several symbols that are not used in ACCESS.
XCOMM
XCOMM Contact seacas@sandia.gov if you have any questions
XCOMM
/* ======================================================================== */
/* Define RedHatLinux as YES if this is RedHat 5.1 or newer */
/* #define RedHatLinux YES */
#ifdef RedHatLinux
#define OSVendor		RedHat 5.2
#define	OSMajorVersion		2
#define OSMinorVersion		0
#define OSTeenyVersion		36
#endif
/* ======================================================================== */

/* ======================================================================== */
XCOMM   Define one of the following, default is gcc, g++, g77
XCOMM   Can also define in site.def
#if !defined(CROSSCOMPILERS) && !defined(GCCG77) && !defined(GCCF2C) && !defined(PORTLAND) && !defined(GCCFORT)
#define CROSSCOMPILERS 1
/* #define GCCG77 1 */
/* #define GCCF2C 1 */
/* #define PORTLAND 1 */
/* #define GCCFORT 1 */
#endif
/* ======================================================================== */

#ifndef OSName
#define OSName			Linux
#endif

#ifndef OSVendor
#define OSVendor		Unknown
#endif

#ifndef OSMajorVersion
#define OSMajorVersion		DefaultOSMajorVersion
#endif

#ifndef OSMinorVersion
#define OSMinorVersion		DefaultOSMinorVersion
#endif

#ifndef OSTeenyVersion
#define OSTeenyVersion		DefaultOSTeenyVersion
#endif

XCOMM operating system:  OSName (OSMajorVersion./**/OSMinorVersion./**/OSTeenyVersion)

/* C and C++ Compilers */

/* Portland Group */
#if defined(PORTLAND)
#define CcCmd			pgcc
#define CplusplusCmd		pgCC
#define OptimizedCDebugFlags	-fast
#define OptimizedCplusplusDebugFlags	-fast --no_exceptions -Mframe
#ifdef i386Architecture
#define StandardDefines		-Dlinux -D__i386__ -DADDC_ 
#endif /* i386Architecture */
#ifdef AlphaArchitecture
#define StandardDefines		-Dlinux -D__alpha__ -DADDC_  
#endif /* AlphaArchitecture */
#define HasGcc			NO
#define HasGcc2			NO
#define HasGcc2ForCplusplus	NO
#define GccUsesGas		NO
#define UseGas			NO
#endif /* PORTLAND */

/* GNU gcc, g++ */
#if defined(GCCF2C) || defined(GCCG77) || defined(GCCFORT)
#define CcCmd			gcc
#define CplusplusCmd		g++
#ifdef i386Architecture
/* For PentiumII, can use '-mcpu=pentiumpro' instead of '-m486' */
#define OptimizedCDebugFlags	-O2 -m486
#define StandardDefines		-Dlinux -D__i386__ -DADDC_ -DADDC__
#endif /* i386Architecture */
#ifdef AlphaArchitecture
#define OptimizedCDebugFlags	-g -O2
#ifdef GCCFORT
#define StandardDefines		-Dlinux -D__alpha__ -DADDC_ -DADDC__
#else
#define StandardDefines		-Dlinux -D__alpha__ -DADDC_  
#endif
#endif /* AlphaArchitecture */
#define HasGcc			YES
#define HasGcc2			YES
#define HasGcc2ForCplusplus	YES
#define GccUsesGas		YES
#define UseGas			YES
#endif

/* Cross compilers */
#if defined(CROSSCOMPILERS)
#define CcCmd			cc
#define CplusplusCmd		c++
#define OptimizedCDebugFlags	-fast
#define OptimizedCplusplusDebugFlags	-fast
#ifdef i386Architecture
#ifdef UseInstalled
#define InstallCmd        installsh
#define StandardDefines   -Dlinux -D__i386__ -DADDC_ -U__osf__
#else
#define InstallCmd        $(SHELL) $(CONFIGSRC)/util/install.sh
#define StandardDefines   -DCrossCompiling -Dcrosslinux -Dlinux -D__i386__ -DADDC_
#endif
#endif /* i386Architecture */
#ifdef AlphaArchitecture
#ifdef UseInstalled
#define InstallCmd        installsh
#define StandardDefines   -Dlinux -D__alpha__ -DADDC_ -U__osf__
#else
#define InstallCmd        $(SHELL) $(CONFIGSRC)/util/install.sh
#define StandardDefines   -DCrossCompiling -Dcrosslinux -Dlinux -D__alpha__ -DADDC_
#endif
#endif /* AlphaArchitecture */
#define HasGcc			NO
#define HasGcc2			NO
#define HasGcc2ForCplusplus	NO
#define GccUsesGas		NO
#define UseGas			NO
#endif /* CROSSCOMPILERS */



/* Fortran 77 */

/* Portland Group */
#if defined(PORTLAND)
#define FortranCmd              pgf77
#define Fortran90Cmd		pgf90
#define DefaultF77Options	-fast
/* Following needed for linking f90 and f77 (if f77 does io) */
#define F90ExtraLibraries       -lpgftnrtl
#endif
     
/* F2C, fort77 wrapper script */
#if defined(GCCF2C)
#define FortranCmd		fort77
/* Following needed for fort77 compilation of jas3d jassub.f */
#define DefaultF77Options	-Nn1604
#endif

/* g77 */
#if defined(GCCG77)
#define FortranCmd              g77
#define Fortran90Cmd		f90
#endif

/* compaq fort on alpha */
#if defined(GCCFORT)
#define FortranCmd              fort
#define Fortran90Cmd		fort
#define DefaultF77DebugFlags	-g
#define DefaultF77Options	-Wp,-C
#endif

/* Cross compilers */
#if defined(CROSSCOMPILERS)
#define FortranCmd              f77
#define Fortran90Cmd		f90
#define DefaultF77Options	-fast
#define DefaultF90Options	-fast
#define F90ExtraLibraries       
#define F90ExtraLdOptions       -nofor_main
#endif



#define AsmDefines		-D__ELF__


#define MkdirHierCmd		mkdir -p


#define CppCmd			/lib/cpp
#define PreProcessCmd		CppCmd -P

#define LdCombineFlags		-r
#define StandardCppDefines	-C StandardDefines


#define PerlCmd			/usr/bin/perl
#define System			linux

#define UseElfFormat		YES
#define Use32BitAddress		YES
#define HasShadowPasswd		NO

#define HasPutenv		YES
#define HasShm			YES
#define HasSockets		YES

#define AvoidNullMakeCommand	YES
#define CompressAllFonts	YES
#define Malloc0ReturnsNull	YES
#define NeedConstPrototypes	YES
#define NeedFunctionPrototypes	YES
#define NeedNestedPrototypes	YES
#define NeedVarargsPrototypes	YES
#define NeedWidePrototypes	NO
#define SetTtyGroup		YES
#define NeedsDoubleEscape	YES
#define ArCmd			ar cr

#ifdef AlphaArchitecture
#ifdef GCCFORT
/* 
 * This special F77 link line adds the ldscript to the link line on 
 * linux-alpha.  The ldscript changes sbrk to allocate memory down
 * in the 32-bit range so the supes memory manager will work with
 * fortran.  Simulates the 'taso' option 
 */
#ifndef F77LinkRule
#define F77LinkRule(program,options,objects,libraries) \
$(FC) -o program options objects -Wl,-T -Wl,$(LIBDIR)/ldscript $(LIBPATH) libraries $(EXTRA_LOAD_FLAGS)
#endif
#endif
#endif



/* Special defines for the cross compile */
#define BootstrapCFlags -DCrossCompiling -Dcrosslinux

#define NativeCC /bin/cc
#define NativeF77 /bin/f77 
#define CrossCC cc

#define HasMPI YES
#define MPIIncludePath $(CPLANT_PATH)/include
#define MPILibPath $(CPLANT_PATH)/lib

#define CrossAccessRoot  /etc/home/projects/seacas/SEACAS_23SEP1999

#ifdef i386Architecture
#define CrossAllDefines  -I$(CROSSACCESSROOT)/inc -Dlinux -D__i386__ -DADDC_ -U__osf__
#endif /* i386Architecture */
#ifdef AlphaArchitecture
#define CrossAllDefines  -I$(CROSSACCESSROOT)/inc -Dlinux -D__alpha__ -DADDC_ -U__osf__
#endif /* AlphaArchitecture */

#define ParRunCmd yod
#define NPCmd -size
#define ExtraLibraries -L/usr/lib -ldnet_stub
#define NumProcs 4
