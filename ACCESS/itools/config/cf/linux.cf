/* -*- c -*- */

/* Change to YES for 64-bit build or NO for 32-bit build; (some defines do it automatically) */
#define Build64BitAccess YES

XCOMM ========================================================================
XCOMM Define ONE of the following compilers.
XCOMM
XCOMM  [GCC4GFORTRAN] gcc, g++, g77  (version 4.1 or later)
XCOMM  [PORTLAND]     pgcc, pgCC, pgf77 (Portland Group)   
XCOMM  [USE_INTEL]    icc,  ifc (Intel)                    
XCOMM  [GCC_INTEL]    gcc/g++ to compiler C/C++ code and intel to compile fortran/fortran90 code

/* #define GCC4GFORTRAN 1 */
/* #define PORTLAND 1 */
/* #define USE_INTEL 1 */
/* #define GCC_INTEL 1 */
  
/* #define REDSTORM_LOGIN 1 */
/* #define REDDISH 1 */             /* x86_64 */
/* #define GOODYEAR_GM 1 */         /* x86_64 */
/* #define GOODYEAR_PATH 1 */       /* x86_64, pathscale compiler */
/* #define BLACKROSE 1 */
/* #define PARALLEL_AWARE */       /* gcc with mpi compilers for parallel-aware exodus, ... */

XCOMM   using several compilers:                     Symbol to define
XCOMM       gcc, g++, g77  (version 4.1 or later)	 [GCC4GFORTRAN]
XCOMM       pgcc, pgCC, pgf77 (Portland Group)           [PORTLAND]
XCOMM       icc,  ifc (Intel)                            [USE_INTEL]
XCOMM
XCOMM   Pronto3D and Jas3D require a Fortran90 compiler. 
XCOMM   We have used intel, portland, pathscale, gfortran-4.X
XCOMM
XCOMM NOTE: This was copied from the X11 distribution and modified. 
XCOMM       It includes several symbols that are not used in ACCESS.
XCOMM
XCOMM NOTE: The default flags do not do very aggressive optimization;
XCOMM       You can change this if you want (possibly) faster execution.
XCOMM
XCOMM Contact gdsjaar@sandia.gov if you have any questions
XCOMM

#if !defined(GCC4GFORTRAN) && !defined(PORTLAND) && !defined(USE_INTEL) && !defined(REDSTORM_LOGIN) && !defined(REDDISH) && !defined(GOODYEAR_GM) && !defined(GOODYEAR_PATH) && !defined(GCC_INTEL) && !defined(BLACKROSE) && !defined(PARALLEL_AWARE)

#error "Must define which compiler to use or system to build on."
#endif

/* I think all compilers used will accept this flag... */
#define PositionIndependentCFlags -fpic

#if defined(PARALLEL_AWARE)
#define ParallelAwareExodus YES
#endif

/* To build SEACAS with the parallel-aware exodus and the
 * decomp-on-the-fly capability for Ioss, you need to do
 * the following:
 * -- define BuildParallelAwareExodus in this file.
 * -- Add -DPARALLEL_AWARE_EXODUS to the C compilers flags
 * -- The C and C++ Compilers must be changed to mpicc and mpic++ (or equiv)
 *
 * NOTE that the SEACAS executables other than io_info and io_shell are
 *      not parallelized and so would not benefit from this. The only
 *      benefit would be if your application needed the parallel-aware
 *      exodus and/or dof-enabled Ioss.
 */
#if ParallelAwareExodus
#define BuildParallelAwareExodus
#define ParAwareExoDefine -DPARALLEL_AWARE_EXODUS
#endif

#if defined(GOODYEAR_GM) || defined(GOODYEAR_PATH)
#undef Build64BitAccess
#define Build64BitAccess YES
#endif

/* Most users should not need to change anything below here. */

#define OSName 			DefaultOSName
#define OSMajorVersion		DefaultOSMajorVersion
#define OSMinorVersion		DefaultOSMinorVersion
#define OSTeenyVersion		DefaultOSTeenyVersion


XCOMM operating system:  OSName (OSMajorVersion./**/OSMinorVersion./**/OSTeenyVersion)

/* For ACCESS/prepost/spiff */
#define TermcapLibrary -lncurses
#define TermcapDefine  -DM_TERMINFO

/* C and C++ Compilers */
/* Portland Group  http://www.pgroup.com */
/*
 * NOTE: If you get an error similar to the following when compiling
 * genhxshl or epu, you should edit the cstdio file and remove that
 * line. It is a problem with the compiler and not with our code.
 *
 * "/var/tmp/pgi/linux86/5.1/include/CC/cstdio", line 114: error: the global
 *          scope has no "vsnprintf"
 * using _STLP_VENDOR_CSTD::vsnprintf;
 *
 */

#if defined(REDDISH) || defined(REDSTORM_LOGIN)
     /* NOTE: Be sure that module PrgEnv is *not* loaded */
#define Build64BitAccess YES
#define PORTLAND 1
#define X11Lib 		        -L/usr/X11R6/lib64 -lX11
#ifndef ExcludeAnalysis 
#define ExcludeAnalysis
#endif
#endif

#if defined(PORTLAND)
#define CcCmd				pgcc
#define CplusplusCmd			pgCC
#define OptimizedCDebugFlags		-Mframe
#define OptimizedCplusplusDebugFlags	-Mframe
#define HasGcc				NO
#define HasGcc2				NO
#define HasGcc2ForCplusplus		NO
#define GccUsesGas			NO
#define UseGas				NO

/* Fortran */
#define FortranCmd              	pgf77
#define Fortran90Cmd			pgf90
#define DefaultF77Options		-fast

/* Following needed for linking f90 and f77 (if f77 does io) */
#define F90ExtraLibraries       	-lpgftnrtl

/* PORTLAND i386A */
#ifdef i386Architecture
#define StandardDefines			-Dlinux -D__i386__ -DADDC_ 
#endif /* i386Architecture */

#if defined x86_64Architecture
#undef CcCmd
#undef CplusplusCmd
#undef FortranCmd
#undef Fortran90Cmd
#undef StandardDefines

#if Build64BitAccess
#define CcCmd				pgcc  -tp=k8-64 -fast
#define CplusplusCmd			pgCC  -tp=k8-64 -fast
#define FortranCmd              	pgf77 -tp=k8-64 -fast
#define Fortran90Cmd			pgf90 -tp=k8-64 -fast
#define F90PrecOptions			-r8 -i8
#define F77PrecOptions			-r8 -i8
#define StandardDefines			-DBuild64 -Dlinux -DADDC_ 

#define ParallelCCOptions 	 -Mmpi 
#define ParallelF77Options 	 -Mmpi
#define ParallelF90Options 	 -Mmpi
#define ParallelExtraLoadOptions -Mmpi
#define ParFLibs 		
#define ParCLibs		

#if defined(REDSTORM_LOGIN)
#undef  OptimizedCDebugFlags
#undef OptimizedCplusplusDebugFlags
#define OptimizedCDebugFlags	-Mframe 
#define OptimizedCplusplusDebugFlags	-Mframe
#endif

#else /* PORTLAND 32 bit */
#define CcCmd				pgcc  -tp=k8-32
#define CplusplusCmd			pgCC  -tp=k8-32
#define FortranCmd              	pgf77 -tp=k8-32
#define Fortran90Cmd			pgf90 -tp=k8-32
#define StandardDefines			-Dlinux -DADDC_ 
#endif /* PORTLAND 64 bit */
#endif /* PORTLAND x86_64 arch*/

#ifdef AlphaArchitecture /* PORTLAND Alpha */
#define StandardDefines			-Dlinux -D__alpha__   
#endif /* PORTLAND Alpha */

#endif /* PORTLAND */

#if defined GOODYEAR_GM
#define PGI_PATH        /usr/local/pgi/6.0/linux86-64/6.0/bin/
#define CcCmd		/usr/local/pgi/6.0/linux86-64/6.0/bin/pgcc  -tp=k8-64 -fast
#define CplusplusCmd	/usr/local/pgi/6.0/linux86-64/6.0/bin/pgCC  -tp=k8-64 -fast
#define FortranCmd      /usr/local/pgi/6.0/linux86-64/6.0/bin/pgf77 -tp=k8-64 -fast
#define Fortran90Cmd	/usr/local/pgi/6.0/linux86-64/6.0/bin/pgf90 -tp=k8-64 -fast
#define F90PrecOptions		-r8 -i8
#define F77PrecOptions		-r8 -i8
#define StandardDefines		-DBuild64 -Dlinux -DADDC_ 
#define OptimizedCDebugFlags		-Mframe
#define OptimizedCplusplusDebugFlags	-Mframe
#define DefaultF77Options		-fast
#define F90ExtraLibraries       	-lpgftnrtl

#define MPICH_DIR	    /usr/local/mpi/mpich/mpichgm-1.2.6..14b-gm/pgi64/bin/
#define ParallelCcCmd		/usr/local/mpi/mpich/mpichgm-1.2.6..14b-gm/pgi64/bin/mpicc
#define ParallelCplusplusCmd 	/usr/local/mpi/mpich/mpichgm-1.2.6..14b-gm/pgi64/bin/mpiCC
#define ParallelFortranCmd	/usr/local/mpi/mpich/mpichgm-1.2.6..14b-gm/pgi64/bin/mpif77
#define ParallelFortran90Cmd	/usr/local/mpi/mpich/mpichgm-1.2.6..14b-gm/pgi64/bin/mpif90
#define ParRunCmd           "/usr/local/mpi/mpich/mpichgm-1.2.6..14b-gm/pgi64/bin/mpirun --gm-copy-env -v -machinefile $${PBS_NODEFILE}"
#define ParFLibs 		
#define ParCLibs		
#define ExtraLoadOptions  -Wl,-R/opt/gm/lib64
#endif

#if defined GOODYEAR_PATH
#define CcCmd		pathcc
#define CplusplusCmd	pathCC  -m64 -march=opteron -mtune=opteron
#define FortranCmd      pathf95 -m64 -march=opteron -mtune=opteron
#define Fortran90Cmd	pathf95 -m64 -march=opteron -mtune=opteron
#define F90PrecOptions		-r8 -i8
#define F77PrecOptions		-r8 -i8
#define StandardDefines		-m64 -DBuild64 -Dlinux -DADDC_ -DADDC__
#define OptimizedDebugFlags	-O3 -fno-math-errno -msse2 -march=opteron -mtune=opteron 
#define ExtraLoadOptions  -Wl,-R/projects/compilers/pathscale/3.2/lib/3.2

#define MPICH_DIR	        /projects/mpi/openmpi/1.2.5/pathscale/3.2/bin/
#define ParallelCcCmd		/projects/mpi/openmpi/1.2.5/pathscale/3.2/bin/mpicc -m64 -march=opteron -mtune=opteron
#define ParallelCplusplusCmd 	/projects/mpi/openmpi/1.2.5/pathscale/3.2/bin/mpiCC -m64 -march=opteron -mtune=opteron
#define ParallelFortranCmd	/projects/mpi/openmpi/1.2.5/pathscale/3.2/bin/mpif77 -m64 -march=opteron -mtune=opteron
#define ParallelFortran90Cmd	/projects/mpi/openmpi/1.2.5/pathscale/3.2/bin/mpif90 -m64 -march=opteron -mtune=opteron
#define ParRunCmd           "/projects/mpi/openmpi/1.2.5/pathscale/3.2/bin/mpiexec"
#define ParFLibs 		
#define ParCLibs		
#define ParallelExtraLoadOptions  -Wl,-R/projects/compilers/pathscale/3.2/lib/3.2 -Wl,-R/projects/mpi/openmpi/1.2.5/pathscale/3.2/lib
#endif

/* USE_INTEL C/C++ Compiler 
 * http://www.intel.com/software/products/compilers/c50/linux/
 */
#if defined(BLACKROSE)
#ifndef USE_INTEL
#define USE_INTEL
#endif
#undef Build64BitAccess
#define Build64BitAccess YES 
#endif /* BLACKROSE */

#if defined(USE_INTEL)
#define CcCmd			icc
#define CplusplusCmd		icpc
#define FortranCmd              ifort -cm
#define Fortran90Cmd		ifort -w90 -cm
#define OptimizedDebugFlags	-O2 -ip
#if Build64BitAccess
#define F90PrecOptions		-r8 -i8
#define F77PrecOptions		-r8 -i8
#define StandardDefines		-DBuild64 -Dlinux -DADDC_
#else
#define StandardDefines		-Dlinux -DADDC_
#endif
#define NeedsDoubleEscape	NO
#define HasGcc			NO
#define HasGcc2			NO
#define HasGcc2ForCplusplus	NO
#define GccUsesGas		NO
#define UseGas			NO
#define ExtraLoadOptions  
#endif /* USE_INTEL */


#if defined(GCC4GFORTRAN) 

#define X11Includes -I/usr/include/X11R6

#define CcCmd                   gcc
#define CplusplusCmd            g++

#ifdef i386Architecture
#define StandardDefines		-Dlinux  -DADDC_
#define OptimizedDebugFlags	-O2 
#define X11Lib 		        -L/usr/lib -lX11
#endif /* i386Architecture */

/* Itanium */
#if defined ia64Architecture 
#if Build64BitAccess
/* The itanium system we used (altix) did not have the lib64 versions of the
 * 64-bit libraries; they were stored in the lib instead.
 */
#define X11Lib 		        -L/usr/X11R6/lib -lX11

#undef StandardDefines
#define StandardDefines		-DBuild64 -Dlinux  -DADDC_
 /* -fno-range-check needed for x80000000 in plt library.
  *   -fcray-pointer needed for addrwrap.F in exodusII
  */
#define F77PrecOptions          -DBuild64  -fno-f2c -O3 -fno-range-check -fcray-pointer -fdefault-real-8 -fdefault-integer-8
#define F90PrecOptions          -fno-f2c -O3 
#define ExtraLoadOptions        /* Define if need non-standard path to a gcc-4.X library  -Wl,-R/var/scratch2/gcc4/lib64 */
#endif
#endif

#if defined x86_64Architecture
#if Build64BitAccess
#define X11Lib 		        -L/usr/lib64 -lX11
#undef StandardDefines
#define StandardDefines		-m64 -DBuild64 -Dlinux  -DADDC_
 /* -fno-range-check needed for x80000000 in plt library.
  *   -fcray-pointer needed for addrwrap.F in exodusII
  */
#define F77PrecOptions          -m64 -DBuild64  -fno-f2c -O3 -fno-range-check -fcray-pointer -fdefault-real-8 -fdefault-integer-8
#define F90PrecOptions          -m64 -fno-f2c -O3 
#define ExtraLoadOptions        -m64 /* -Wl,-R/var/scratch2/gcc4/lib64 */
#else
#undef StandardDefines
#define StandardDefines		-m32 -Dlinux  -DADDC_
#define F77PrecOptions          -m32 -fno-f2c -O3 -fno-range-check
#define F90PrecOptions          -m32 -fno-f2c -O3 
#define ExtraLoadOptions        -m32 /* -Wl,-R/var/scratch2/gcc4/lib */
#endif
#endif /* x86_64Architecture && !Build64BitAccess */

#define HasGcc			YES
#define HasGcc2			YES
#define HasGcc2ForCplusplus	YES
#define GccUsesGas		YES
#define UseGas			YES

#define FortranCmd              gfortran
#define Fortran90Cmd            gfortran
#define DefaultF77Options	-fno-range-check

/* Jas3d seems to need -O0 for gfortran (at least for 4.1.2) */
#define DefaultF90DebugFlags	-O0
#define NeedsDoubleEscape	NO
#endif  /* GCC4GFORTRAN */

#if defined(PARALLEL_AWARE) 

#define BuildParallelAwareExodus
#define X11Includes -I/usr/include/X11R6

#define CcCmd                   mpicc
#define CplusplusCmd            mpiCC

#if defined x86_64Architecture
#if Build64BitAccess
#define X11Lib 		        -L/usr/lib64 -lX11
#undef StandardDefines
#define StandardDefines		-m64 -DBuild64 -Dlinux  -DADDC_ -DPARALLEL_AWARE_EXODUS 
 /* -fno-range-check needed for x80000000 in plt library.
  *   -fcray-pointer needed for addrwrap.F in exodusII
  */
#define F77PrecOptions          -m64 -DBuild64  -fno-f2c -O3 -fno-range-check -fcray-pointer -fdefault-real-8 -fdefault-integer-8
#define F90PrecOptions          -m64 -fno-f2c -O3 
#define ExtraLoadOptions        -m64 /* -Wl,-R/var/scratch2/gcc4/lib64 */
#else
#undef StandardDefines
#define StandardDefines		-m32 -Dlinux  -DADDC_ -DPARALLEL_AWARE_EXODUS 
#define F77PrecOptions          -m32 -fno-f2c -O3 -fno-range-check
#define F90PrecOptions          -m32 -fno-f2c -O3 
#define ExtraLoadOptions        -m32 /* -Wl,-R/var/scratch2/gcc4/lib */
#endif
#endif /* x86_64Architecture && !Build64BitAccess */

#define FortranCmd              mpif77
#define Fortran90Cmd            mpif90
#define DefaultF77Options	-fno-range-check

#define NeedsDoubleEscape	NO
#endif  /* PARALLEL_AWARE */

#if defined(GCC_INTEL) 

#define CcCmd			gcc
#define CplusplusCmd		g++

#define StandardDefines		-Dlinux  -DADDC_ 
#define OptimizedDebugFlags	-O2 

#define HasGcc			YES
#define HasGcc2			YES
#define HasGcc2ForCplusplus	YES
#define GccUsesGas		YES
#define UseGas			YES

#define FortranCmd              ifort -cm
#define Fortran90Cmd		ifort -w90 -cm
#define DefaultF77Options	-O2 -ip

#endif  /* GCC_INTEL */

#define MkdirHierCmd		mkdir -p

#define CppCmd			/lib/cpp

#define PreProcessCmd		CppCmd -P
#define UseCCMakeDepend		YES

#ifndef NeedsDoubleEscape
#define NeedsDoubleEscape	YES
#endif

#define ArCmd			ar cr

#define TermcapLibrary          -lncurses
#define TermcapDefine           -DM_TERMINFO

/* Following are left over from X11 use */
#define LdCombineFlags		-r
#define StandardCppDefines	StandardDefines

#define PerlCmd			/usr/bin/perl
#define System			linux

#define UseElfFormat		YES
#define Use32BitAddress		YES
#define HasShadowPasswd		NO

#define HasPutenv		YES
#define HasShm			YES
#define HasSockets		YES

#define AvoidNullMakeCommand	YES
#define CompressAllFonts	YES
#define Malloc0ReturnsNull	YES
#define NeedConstPrototypes	YES
#define NeedFunctionPrototypes	YES
#define NeedNestedPrototypes	YES
#define NeedVarargsPrototypes	YES
#define NeedWidePrototypes	NO
#define SetTtyGroup		YES

XCOMM Default location for linux systems if not redefined above
#ifndef X11Includes
#define X11Includes -I/usr/X11R6/include
#endif
#ifndef X11Lib
#if Build64BitAccess
#define X11Lib -L/usr/X11R6/lib64 -lX11
#else
#define X11Lib -L/usr/X11R6/lib   -lX11
#endif
#endif

#include<lnxLib.rules>
