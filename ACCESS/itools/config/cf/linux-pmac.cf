/* -*- c -*- */
XCOMM
XCOMM   using several compilers:                     Symbol to define
XCOMM       gcc, g++, g77  (version 4.1 or later)	 [GCC4GFORTRAN]
XCOMM       gcc, g++, g77  (version 3.X)	         [GCCG77]
XCOMM       pgcc, pgCC, pgf77 (Portland Group)           [PORTLAND]
XCOMM       icc,  ifc (Intel)                            [USE_INTEL]
XCOMM
XCOMM   Pronto3D and Jas3D require a Fortran90 compiler. 
XCOMM   We have used intel, portland, pathscale, gfortran-4.X
XCOMM
XCOMM NOTE: This was copied from the X11 distribution and modified. 
XCOMM       It includes several symbols that are not used in ACCESS.
XCOMM
XCOMM NOTE: The default flags do not do very aggressive optimization;
XCOMM       You can change this if you want (possibly) faster execution.
XCOMM
XCOMM Contact gdsjaar@sandia.gov if you have any questions
XCOMM
/* Change to YES for 64-bit build or NO for 32-bit build; (some defines do it automatically) */
#define Build64BitAccess YES

#define PositionIndependentCFlags -qpic=large

XCOMM ========================================================================
XCOMM Define ONE of the following compilers.
XCOMM
XCOMM  [GCC4GFORTRAN] gcc, g++, gfortran  (version 4.1 or later)
XCOMM  [VACPP]        xlc, xlC, xlf

/* #define GCC4GFORTRAN 1 */
/* #define VACPP 1 */

#if !defined(GCC4GFORTRAN) && !defined(VACPP)

#error "linux-pmac.cf: Must define which compiler to use or system to build on."
#endif

/* Most users should not need to change anything below here. */

#define OSName 			DefaultOSName
#define OSMajorVersion		DefaultOSMajorVersion
#define OSMinorVersion		DefaultOSMinorVersion
#define OSTeenyVersion		DefaultOSTeenyVersion


XCOMM operating system:  OSName (OSMajorVersion./**/OSMinorVersion./**/OSTeenyVersion)

/* For ACCESS/prepost/spiff */
#define TermcapLibrary -lncurses
#define TermcapDefine  -DM_TERMINFO

#if defined(GCC4GFORTRAN) 

#define PositionIndependentCFlags -fpic

#define CcCmd                   gcc
#define CplusplusCmd            g++

#if Build64BitAccess
#undef StandardDefines
#define StandardDefines		-m64 -DBuild64 -Dlinux 
 /* -fno-range-check needed for x80000000 in plt library.
  *   -fcray-pointer needed for addrwrap.F in exodusII
  */
#define F77PrecOptions          -m64 -DBuild64  -fno-f2c -fno-range-check -fcray-pointer -fdefault-real-8 -fdefault-integer-8
#define F90PrecOptions          -m64 -fno-f2c 
#define ExtraLoadOptions        -m64 
#else
#undef StandardDefines
#define StandardDefines		-m32 -Dlinux 
#define F77PrecOptions          -m32 -fno-f2c -fno-range-check
#define F90PrecOptions          -m32 -fno-f2c  
#define ExtraLoadOptions        -m32
#endif

#define HasGcc			YES
#define HasGcc2			YES
#define HasGcc2ForCplusplus	YES
#define GccUsesGas		YES
#define UseGas			YES

#define FortranCmd              gfortran 
#define Fortran90Cmd            gfortran
#define DefaultF77Options	-fno-range-check -fno-underscoring
			 /* The -fno-underscoring option is for compatibility with the vacpp compiler...
			  * Another option is to use -qextname on the xlf build which is supposed to append
			  * an underscore to all xlf-generated symbols
			  */

/* Jas3d seems to need -O0 for gfortran (at least for 4.1.2) */
#define DefaultF90DebugFlags	-O0
#define NeedsDoubleEscape	NO
#endif  /* GCC4GFORTRAN */

#if defined(VACPP)

#define CcCmd			xlc
#define CplusplusCmd		xlC
#define FortranCmd              xlf 
#define Fortran90Cmd		xlf90

#if Build64BitAccess

#undef StandardDefines
#define Use32BitAddress YES
#define ArCmd ar -X64 -c -s -r
#define ArFlags -X64 cru

#define DefaultCCOptions        -q64 -D_LARGE_FILES -Dlinux -D__VACPP__ -DBuild64
#define CplusplusOptions        -q64 -D_LARGE_FILES -Dlinux -D__VACPP__ -DBuild64

#define DefaultF77Options       -q64 -qhalt=S -b64 -qwarn64 -WF,-DNeedsDoubleEscape -WF,-DBuild64
#define DefaultF90Options       -q64 -qhalt=S -b64 -qwarn64 -WF,-DNeedsDoubleEscape -WF,-DBuild64
#define F77PrecOptions          -qintsize=8 -qrealsize=8
#define F90PrecOptions          -qintsize=8 -qrealsize=8
#define ExtraLoadOptions        -q64 

#else

#define DefaultCCOptions        -D_LARGE_FILES -Dlinux
#define CplusplusOptions        -D_LARGE_FILES -Dlinux

#define DefaultF77Options       -qhalt=S -qwarn64 -WF,-Dlinux -D__VACPP__ -WF,-DNeedsDoubleEscape
#define DefaultF90Options       -qhalt=S -qwarn64 -WF,-Dlinux -D__VACPP__ -WF,-DNeedsDoubleEscape

#endif

#define NeedsFortranFlush YES
#define OptimizedDebugFlags	-O3
#define DefaultF77DebugFlags    -O3 
#define DefaultF90DebugFlags    -O3
#define DefaultCDebugFlags      -O3
#define FortranStaticFlags      -qsave

#endif  /* VACPP */

#define MkdirHierCmd		mkdir -p

#define CppCmd			/lib/cpp

#define PreProcessCmd		CppCmd -P
#define UseCCMakeDepend		YES

#define ArCmd			ar cr

#define TermcapLibrary          -lncurses
#define TermcapDefine           -DM_TERMINFO

/* Following are left over from X11 use */
#define LdCombineFlags		-r
#define StandardCppDefines	StandardDefines -D__VACPP__

#define PerlCmd			/usr/bin/perl
#define System			linux

#define UseElfFormat		YES
#define Use32BitAddress		YES
#define HasShadowPasswd		NO

#define HasPutenv		YES
#define HasShm			YES
#define HasSockets		YES

#define AvoidNullMakeCommand	YES
#define CompressAllFonts	YES
#define Malloc0ReturnsNull	YES
#define NeedConstPrototypes	YES
#define NeedFunctionPrototypes	YES
#define NeedNestedPrototypes	YES
#define NeedVarargsPrototypes	YES
#define NeedWidePrototypes	NO
#define SetTtyGroup		YES

XCOMM Default location for linux systems if not redefined above

#ifndef X11Includes
#define X11Includes -I/usr/X11R6/include
#endif

#ifndef X11Lib
#if Build64BitAccess
#define X11Lib -L/usr/X11R6/lib64 -lX11
#else
#define X11Lib -L/usr/X11R6/lib   -lX11
#endif
#endif

#include<lnxLib.rules>
