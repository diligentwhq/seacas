XCOMM $XConsortium: Imakefile /main/137 1996/10/08 07:38:14 swick $
#define IHaveSubdirs

#if defined(CrossCougarArchitecture) || defined(CrossLinuxArchitecture)
CDEBUGFLAGS = -O
#endif

#define PassCDebugFlags CDEBUGFLAGS="$(CDEBUGFLAGS)"

DIST_NAME = "itools distribution"

RELEASE = "Release 6.3"
#ifndef OSName
#define OSName Unknown Operating System!
#endif

        SUBDIRS = config

MakeSubdirs($(SUBDIRS))

DependSubdirs($(SUBDIRS))

#define IHaveSpecialMakefileTarget

#ifndef Win32Architecture
VerifyOS::
	@echo ""
#if defined(LinuxArchitecture)
	@echo Building on OSName -- LinuxArchitecture
#else
	@echo Building on "OSName".
#endif
	@echo ""

includes::
	MakeDir($(BUILDINCDIR))

/*
XCOMM
XCOMM Watch out!!!  Make sure you do make includes after removing X11....
XCOMM
clean::
	$(RM) -r $(BUILDINCDIR)
*/

      MAKE_OPTS = -f xmakefile

Everything::
	@echo ""
	@echo Rebuilding $(RELEASE) of the $(DIST_NAME).
	@echo ""
	@date
	@echo ""
	cd $(IMAKESRC) && if [ -f Makefile ]; then \
	    $(MAKE) $(MFLAGS) BOOTSTRAPCFLAGS="$(BOOTSTRAPCFLAGS)"; \
	else \
	    $(MAKE) $(MFLAGS) -f Makefile.ini BOOTSTRAPCFLAGS="$(BOOTSTRAPCFLAGS)"; \
	fi
	-$(RM) xmakefile.bak; $(MV) xmakefile xmakefile.bak
	$(MAKE) $(MFLAGS) xmakefile
	$(MAKE) $(MFLAGS) $(MAKE_OPTS) Makefiles
	$(MAKE) $(MFLAGS) $(MAKE_OPTS) includes
	$(MAKE) $(MFLAGS) $(MAKE_OPTS) depend
	$(MAKE) $(MFLAGS) $(MAKE_OPTS) $(WORLDOPTS)
	@echo ""
	@date
	@echo ""
	@echo Rebuild of $(RELEASE) of the $(DIST_NAME) complete.
	@echo ""

XCOMM clean out link tree looking for stuff that should get checked in
dangerous_strip_clean::
	$(MAKE) -k clean
	find . -type l -exec rm {} \;
	find . \( \! \( -type d -o -name Makefile \) \) -print

#else /* not Win32Architecture else */
VerifyOS::
	@echo :
	@echo Building on "OSName".
	@echo :

includes::
	MakeDir($(BUILDINCDIR:/=\))

/*
XCOMM
XCOMM Watch out!!!  Make sure you do make includes after removing X11....
XCOMM
clean::
	if exist $(BUILDINCDIR:/=\) RmTreeCmd $(BUILDINCDIR:/=\)
*/

Everything::
	@echo :
	@echo Rebuilding $(RELEASE) of the $(DIST_NAME).
	@echo :
	@echo :
	cd $(IMAKESRC)
	$(MAKE) $(MFLAGS) -f Makefile.ini imake.exe
	cd ..\..
	RMoveToBakFile(xmakefile)
	$(MAKE) $(MFLAGS) xmakefile
	$(MAKE) $(MFLAGS) $(MAKE_OPTS) Makefiles
	$(MAKE) $(MFLAGS) $(MAKE_OPTS) includes
	$(MAKE) $(MFLAGS) $(MAKE_OPTS) depend
	$(MAKE) $(MFLAGS) $(MAKE_OPTS) $(WORLDOPTS)
	@echo :
	@echo :
	@echo Rebuild of $(RELEASE) of the $(DIST_NAME) complete.
	@echo :

#ifdef ProjectRoot
install::
	MakeDir($(PROJECTROOT:/=\))
#endif

install::
	MakeDir($(INCROOT:/=\))
	MakeDir($(USRLIBDIR:/=\))
	MakeDir($(LIBDIR:/=\))

#endif /* not Win32Architecture else */

XCOMM special target to determine if the xmakefile exists. 
XCOMM Works on both Unix and NMAKE.EXE
xmakefile-exists::


#ifndef MakeManKeywords
#define MakeManKeywords YES	/* install.man rebuilds "man -k" database? */
#endif

#undef BootstrapCleanSubdirs
#define BootstrapCleanSubdirs BOOTSTRAPSUBDIRS="$(BOOTSTRAPSUBDIRS)"
BOOTSTRAPSUBDIRS = imake makedepend

README:
	groff -mgs tmac.wrprc README.ms > README.ps
	troff2html -ms tmac.wrprc -a tc.wrprc-html README.ms > README.html
	unroff -ms tmac.wrprc README.ms > README.txt
