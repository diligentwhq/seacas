C Copyright (c) 2008 Sandia Corporation.  Under the terms of Contract
C DE-AC04-94AL85000 with Sandia Corporation, the U.S. Government retains
C certain rights in this software
C 
C Redistribution and use in source and binary forms, with or without
C modification, are permitted provided that the following conditions are
C met:
C 
C     * Redistributions of source code must retain the above copyright
C       notice, this list of conditions and the following disclaimer.
C 
C     * Redistributions in binary form must reproduce the above
C       copyright notice, this list of conditions and the following
C       disclaimer in the documentation and/or other materials provided
C       with the distribution.
C 
C     * Neither the name of Sandia Corporation nor the names of its
C       contributors may be used to endorse or promote products derived
C       from this software without specific prior written permission.
C 
C THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
C "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
C LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
C A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
C OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
C SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
C LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
C DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
C THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
C (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
C OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
C 

C $Id: qainfo.blk,v 1.1 2009/06/09 19:01:22 gdsjaar Exp $
C $Log: qainfo.blk,v $
C Revision 1.1  2009/06/09 19:01:22  gdsjaar
C mAdd gjoin (access gjoin2) based on copyright assertion paperwork coming through.
C
C Revision 1.31  2008/07/31 20:15:56  gdsjaar
C Change the way the nodal point node membership is calculated. For some
C reason, the locint calls used in the old method became a bottleneck on
C some compilers (runtime went from ~30 seconds to multiple hours) with
C no other changes.  Recompiling the same code with 32-bit gcc gives
C short runtime; 32-bit or 64-bit intel gives long runtimes.
C
C Modified the routine to index all active nodes in a NUMNP-long array
C and then check whether a node is indexed instead of doing a locint
C call (constant time vs linear time).
C
C Revision 1.30  2008/04/28 16:00:59  gdsjaar
C Fixed mirroring of shell sidesets.  Since the connectivity has been modified to account for the mirroing, the shell face number should remain the same to give the same normals as the unmirrroed mesh.
C
C Revision 1.29  2008/04/15 18:35:13  gdsjaar
C Add mirroring of sideset faces if the entire model is of shell topology.
C
C Revision 1.28  2008/04/09 21:45:52  gdsjaar
C In the blocks subset, if a user does a reset and then needs to
C recombine 2 blocks with the same id, it didn't work since the id
C search would find the first block with the specified id each time.
C
C Modified so that if in "combine id1 id2" if id1 == id2, then it will
C search for id1 in first set of ids and id2 in second set of ids.
C
C Revision 1.27  2006/03/20 18:38:37  gdsjaar
C Changed multiple calls to expelb to use a single call to expclb. This
C seems to fix some problems with file system buffering data and is more
C efficient overall.
C
C Revision 1.26  2006/02/14 16:01:34  gdsjaar
C Enable mirroring of meshes containing all tet4 elements with sidesets.
C
C Revision 1.25  2006/02/13 20:01:58  gdsjaar
C Error message had 'grepos' instead of 'gjoin2' from a cut-and-paste error.
C
C Revision 1.24  2005/03/14 15:24:05  gdsjaar
C Upped version for earlier add of addlog
C
C Revision 1.23  2005/01/13 14:44:03  gdsjaar
C Added mirroring of 20-node hexes. Needed by Daniel Villa
C
C Revision 1.22  2004/08/12 20:46:08  gdsjaar
C Better message for a distribution-factor face node count mismatch.
C
C Reenabled the writing of distribution factors even if they are all unity. Some codes require them...
C
C Revision 1.21  2003/08/21 13:47:11  gdsjaar
C Eliminated writing of nodeset and sideset distribution factors if they are all unity.
C
C Revision 1.20  2003/08/19 13:12:38  gdsjaar
C Removed element map output.  ExodusII will provide a default map the same as the map written and this eliminates a large memory allocation during the writing of the file
C
C Revision 1.19  2002/06/24 16:09:29  gdsjaar
C Modified the matching algorithm to always use the smallest set (db1 or
C db2) for the outer matching loop and the largest for the inner
C loop. In most cases, this will result in almost the same number of
C matches, but in some pathalogical cases (such as embedding a rebar bar
C mesh into a hex mesh), it will significantly reduce the number of
C comparisons (888 Million vs. 2.7 Trillion for one case).
C
C Modified print format statements to handle larger comparison counts.
C
C Revision 1.18  2002/06/20 20:58:01  gdsjaar
C Fix for incorrect distribution factor offset if joining more than 2
C databases in a single execution.  There was a missing update of the
C distribution factor length variable [Fixes Greg Tipton problem]
C
C Revision 1.17  2002/05/29 18:08:49  gdsjaar
C Fixed to handle sidesets with no distribution factors.
C
C Revision 1.16  2002/01/28 19:44:47  gdsjaar
C Removed debugging code left in zmess.f
C
C Revision 1.15  2001/06/26 17:38:54  gdsjaar
C Modified to use sideset sides instead of sideset nodes.  This was
C needed to support heterogeneous sidesets (eg. mixed hex/tet or wedge
C meshes).
C
C Tested on several old problems and also some mixed element meshes.
C Old problems giving exact same results.
C
C This modification requires exodusII version 3.15 or later since a
C function was added (exgssc -- get sideset face node counts) to make it
C easier to stride through the distribution factors.
C
C Missing capability: (also missing in old)
C 1. mirroring of non-quad/non-hex sidesets
C 2. mirroring with non-unity distribution factors.
C
C These changes at the request of the Salinas team to support milepost calculations.
C
C Revision 1.14  2000/07/14 18:21:07  gdsjaar
C Moved position of expqa and expinf to before the expini call.
C
C This eliminates some work in the nc_enddef call that both put_qa and
C put_info cause.  An nc_enddef call basically copies the complete file
C to insert in a new dimension, but putting the put_qa and put_info at
C the beginning, there is no data to copy, so it is a fast copy.  When
C it is after the ex_put_init, then there is additional data....
C
C Revision 1.13  2000/05/31 20:34:25  gdsjaar
C Added a check for element block names (element type) when merging
C blocks with duplicate ids. This catches the TETRA8 and HEX8 mismatch
C that slipped through with the other checks.
C
C Removed the namfil routine since it wasn't ever really used.
C
C Revision 1.12  2000/01/26 16:38:17  gdsjaar
C Minor change in setsta help message
C
C Revision 1.11  2000/01/06 23:06:36  gdsjaar
C Fix to the by-material matching routine.  It was missing a node
C (seemingly at random).  This is not now happening, but I'm not real
C sure I found the real cause...
C
C Revision 1.10  1999/10/22 16:47:29  gdsjaar
C Fixed exodus error reporting.
C
C Revision 1.9  1999/04/07 16:57:15  gdsjaar
C Fixed confusing error message output in rdgen. If there was either an
C exodus error or a memory error, an error message about Too much
C dynamic memory requested was printed.  Exodus errors now don't print
C that error.
C
C Revision 1.8  1999/03/23 15:16:20  gdsjaar
C Fix for dynamic name allocation added yesterday. Need to use
C mcfind/mcrsrv instead of mdfind/mdrsrv when combining blocks.
C
C Added 'INCREMENT FIRST|SECOND|BOTH increment' option for ids.
C
C Cleared up help strings somewhat in setsta.f
C
C Revision 1.7  1999/03/22 15:53:01  gdsjaar
C Fix problem with too many element blocks. GJoin has fixed size of 256
C element blocks, but didn't check whether maximum was exceeded.
C Changed so element block names are dynamically dimensioned.
C
C Revision 1.6  1999/03/01 17:29:37  gdsjaar
C Fixed appending of filename to info record.
C
C Revision 1.5  1999/02/18 15:16:23  gdsjaar
C Fixed reading of element block attributes
C
C Added better diagnostics when file cannot be opened, now prints filename
C
C Revision 1.4  1999/02/12 18:03:17  gdsjaar
C Fixed appending of filename information to info records.
C
C Revision 1.3  1999/01/27 15:12:36  gdsjaar
C Fixed handling of element order map. For gjoin, we force a 1..numel
C map on the combined mesh.
C
C Added writing of coordinate names
C
C Fixed error handling to not overwrite error code before call to exerr
C
C Revision 1.2  1999/01/19 20:40:46  gdsjaar
C Reduce number of mdlong calls in rdgen (link and attribute arrays)
C
C Revision 1.1  1999/01/18 19:21:25  gdsjaar
C ExodusII version of gjoin, needs testing and syncing with exodus 1 version, but is being committed to permit easier testing and modifications.  This was created by Dave Fry at Goodyear
C
C Revision 1.1.1.1  1998/11/05  16:23:29  a294617
C Initial import == gjoin 1.36
C
C Revision 1.36  1998/08/19 22:28:26  gdsjaar
C Changed the 'combine or ...' prompt to 'equivalence or ...' A user was
C confused by the combine thinking it meant to combine the two models
C into a single model instead of the intended meaning to combine nodes.
C
C Fixed handling of comments inside the equivalence parsing.  (To
C maintain backward compatability, gjoin accepts a blank line as input
C to exit this phase. New code added to distinguish between a blank line
C and a comment line...)
C
C Revision 1.35  1998/08/18 22:10:59  gdsjaar
C Added missing mdlong call for YN and ZN arrays. Looks like
C cut-and-paste never got done...
C
C Revision 1.34  1998/08/13 16:39:23  gdsjaar
C Fix problem with renix call on element block link array. Was using
C nelbl1+nelbl2 instead of current number of element blocks so was
C accessing outside of allocated array
C
C Revision 1.33  1998/05/23 04:35:29  gdsjaar
C Made 'CLOSE' the default node matching option. The majority of the
C problems I have seen with GJoin are fixed if CLOSE was specified. I am
C unaware of any problems that are solved by turning it off other than a
C slight speed penalty. Currently the option cannot be turned off; all
C node matching done on closest node within tolerance.
C
C Removed CLOSE from syntax help; still parses it if entered though.
C
C Revision 1.32  1998/04/13 14:25:33  gdsjaar
C Node matching algorithm was accessing Z array for 2D
C problems. Optimized code on SGI was doing all statements in the if
C even if certain ones weren't true. Modified so this wouldn't happen.
C
C Upped version
C
C Revision 1.31  1998/04/09 05:02:06  gdsjaar
C The code which prints out the sidesets/nodesets/blocks for id
C combining/renumbering needed the needsdoubleescape if block for
C certain systems. Needed to move those routines from .f to .F
C
C Revision 1.30  1998/03/11 20:01:06  gdsjaar
C The code that checks for compatible sidesets did not check for a
C zero-length sideset (no nodes or element faces). Added a check before
C dividing to catch divide-by-zero error.
C
C Revision 1.29  1997/11/18 15:55:30  gdsjaar
C Changes to improve efficiency (factor of 2 to 15 on some Goodyear Treads)
C
C Redid nodeset munching to reduce number of locint calls. First do a
C quick scan on array to get maximum node id in searched array. Then,
C before doing 'locint' call, ensure that id being searched for is less
C than maximum (most times it won't be, saves searching entire list).
C
C Modified the node matching code to also index the nodes within the
C overlap region if doing a nodeset match. This has greatest benefit if
C not all nodes in the nodeset will be matched.
C
C Minor change in offset f -- 'dimension' to 'real'
C
C Revision 1.28  1997/07/02 23:07:34  gdsjaar
C Zero variables if no second database
C
C Revision 1.27  1997/06/02 19:39:14  gdsjaar
C Fixed problem with link and attribute array sizes. The munelb routine
C now returns the new size of the arrays following element deletion and
C the arrays are resized using mdlong. Later calls to find the size of
C the link and attrib arrays using mdfind() now get the correct size.
C
C Revision 1.26  1997/04/10 15:57:03  gdsjaar
C Fixed problem with the previous change to sort on coordinate with
C maximum extent. Had not changed loop begin setting check to work with
C coordinate that is sorted, was still using X.
C
C Revision 1.25  1997/04/09 22:10:10  gdsjaar
C Modified the node matching code to sort the array on the coordinate
C with the largest span. Previously it was done on the x coordinate
C always.
C
C Upped the format string used for the number of elements in the prtelb,
C prtess, and prtnps output to handle large models.
C
C Revision 1.24  1997/04/09 16:35:26  gdsjaar
C More functionality in the setsta CHANGE command. Can now specify
C 'first', 'second', 'all', or 'both' to specify whether the idold in
C the first, second, or both databases should be changed to
C newid. Defaults to 'both'
C
C Revision 1.23  1997/04/09 15:57:14  gdsjaar
C Added 'CHANGE oldid newid' to the nodeset, sideset, and block/material
C id manipulation.
C
C Revision 1.22  1997/04/07 22:40:52  gdsjaar
C Strip leading spaces from input and output genesis filenames
C
C Revision 1.21  1997/04/04 20:06:42  gdsjaar
C Better command input in setitl (TITLE submenu). It was using getinp
C instead of FREFLD, but that caused problems if the command contained
C leading spaces. Replaced to use FREFLD.
C
C Revision 1.20  1996/07/23 14:09:26  gdsjaar
C Added missing newline at end of qainfo.blk
C
C Revision 1.19  1996/07/01 21:26:40  gdsjaar
C Reset the array sizes to match the combined size of the single file
C before reading a new second file. Rdgen uses a mdfind to determine
C sizes, so the array size must be correct.
C
C Revision 1.18  1996/06/28 22:48:11  gdsjaar
C Modified to avoid writing temporary file. Now updates pointers instead
C of writing and then reading immediately.
C
C Revision 1.17  1996/06/28 21:21:53  gdsjaar
C Modified prompting for initial filename so it would ignore comments '$'.
C This allows aprepro to preprocess the input file.
C
C Revision 1.16  1996/01/29 21:03:07  caforsy
C Changed conditional statement for OFFSET command. Supes free field
C reader operates differently on cray, hp, and sun platforms.
C
C Revision 1.15  1995/11/28 20:55:48  gdsjaar
C Added connectivity fixup for mirrored bars
C
CRevision 1.14  1994/08/25  20:17:09  gdsjaar
CModified so can read in temporary file (%gjoin) as one part of the
Cmesh.
C
CRevision 1.13  1994/03/29  15:31:22  gdsjaar
CAdded kludge to fixup element map for some mesh generation programs.
C
CRevision 1.12  1993/07/08  15:48:51  gdsjaar
CAdded copyright notice as per Vic Chavez memo of July 6, 1993
C
CRevision 1.11  1993/02/10  22:55:32  gdsjaar
CFixed problem with version numbering.  When checked out locally, we
Chave the actual tags, but when checked out for external distribution,
Cthe CVS tags and dollar signs are not there, only the value of the tag.
C
CRevision 1.10  1993/01/07  22:30:57  gdsjaar
CAdded EXPECT option to specify number of nodes that should be
Cequivalenced.  gjoin will abort if numbers do not match.
C
CRevision 1.9  1992/11/11  22:00:59  gdsjaar
CAdded revolve and revcen transformation commands.
C
CRevision 1.8  1992/09/10  19:25:44  gdsjaar
CModified equiv routine to sort on x coordinate and fall into and out
Cof loops at correct times based on the distance between the x
Ccoordinates of the two meshes.  Should ultimately do on the
Ccoordinate with the maximum range.
C
CRevision 1.7  1992/09/03  20:36:31  gdsjaar
CFixed up handling of mirror and offset - added a scale command which
Cis combined with mirror, subroutine offset now does both offset and
Cscale.  Added help to irennp.  Increment version number
C
CRevision 1.6  1992/08/26  14:51:17  gdsjaar
CUpdate version number
C
CRevision 1.5  1992/08/25  20:20:57  gdsjaar
CUpdate of version number with addition of by-material matching capability
C
CRevision 1.4  1991/05/23  22:01:35  gdsjaar
CFixed problem with qainfo updating
C
CRevision 1.3  1991/03/05  19:30:21  gdsjaar
CFixed info record reading and updateing and
Ctemporary file naming
C
CRevision 1.2  1991/02/22  15:13:51  gdsjaar
CAdded RCS/QAINFO updating
C
CRevision 1.1.1.1  1990/11/12  14:35:52  gdsjaar
CGJOIN - X1.00.40 - 7/17/90
C
CRevision 1.1  90/11/12  14:35:50  gdsjaar
CInitial revision
C
C

      CHARACTER*32 CVSREV, CVSDAT

C     The CVS* variables are updated by the CVS/RCS program every time
C     this routine is commited to the repository.  Therefore, whenever 
C     there are any changes to any routines, this routine should also 
C     be committed.  The assignment to QAINFO(I) strips off the 'Revision'
C     and 'Date' strings from the CVS variables.  Kludgey but it might work.
      
      CVSREV = '$Revision: 1.1 $'
      CVSDAT = '$Date: 2009/06/09 19:01:22 $'

      QAINFO(1) = 'GJoin2  '
      QAINFO(3) = '        '
      if (cvsrev(1:1) .eq. '$') then
         LREV = LENSTR(CVSREV) - 12
         QAINFO(2) = CVSDAT(10:17)
         QAINFO(3)(MAX(1,8-LREV):8) = CVSREV(12:11+LREV)
      else
         lrev = lenstr(cvsrev)
         QAINFO(2) = CVSDAT(3:10)
         QAINFO(3)(MAX(1,9-LREV):8) = CVSREV(1:LREV)
      end if

C - Fake to cause updating of number
C - Added EXPXYZ - By material matching
C - Fixes in expxyz, matxyz, comand, irennp
C - added mirroring, scaling, offsetting
C - Added sorting to matxyz/expxyz -- seems to work better (2-4 times faster)
c - Added revolve and revcen commands
c - Added expect command
c - Added copyright notice
c - Added CUBIT kludge
C - Added adding %gjoin
c - Added bar mirroring connectivity fixup
c - Added code to disregard comments (from aprepro?) at beginning of input file
c - Modified so no temporary file
C - fixed problems with the no temporary fix
c - fixed input problem in setitl.f (used getinp instead of frefld)
c - strip leading spaces from filenames
c - added CHANGE to setsta -- assign new id to old id
c - more functionality in setsta CHANGE
c - sort on largest overlap delta direction
c - bug fix last change
c - problem with link array size not getting updated
c - zero variables if no second database
c - efficiency
c - check for zero length sideset element list
c - needsdoubleescape for prt* routines
c - fix accessing z array for 2D problems
c - made 'closest' the default matching behavior, always on
c - fix renix call for link arrays.
c - missing mdlong for yn zn in gjoin.f
c - handle comments better
c - fix connectivity input to reduce mdlong calls
c - fix element map handling, error detection, coordinate names
c - fix info record filename appending
c - fix attribute reading, better file open diagnostics
c - fix info recore filename appending (again...)
c - fix maximum element block names -- now dynamic
c - add increment, fix problem with block name reserve
c - fix incorrect memory error message in rdgen
c - fix exodus error reporting
c - fix by-material matching
c - minor change in setsta help message
c - check block names when merging blocks
c - removed unused routines
c - reorder writing of qa and info
c - modified to use sides instead of nodes for sidesets.
c - remove debugging code in zmess
c - fix for no sideset distribution factors
c - fix for incorrect dist factor offset for 3 or more dbs
c - matching mods -- pick based on set size.
c - removed write of element map -- default provided by exodusII
c - eliminate writing distribution factors if they are all unity
c - better message for dist factor error; write dist factor even if all unity..
c - mirroring of 20-node hexes
c - add addlog
c - fix 'grepos' in error message 
c - mirroring of tet sidesets supported if only tets in model
c - use expclb instead of multiple calls to expelb
c - fix so can combine two blocks with same id
c - handle mirroring in models with all shells
c - fix shell sset mirroring -- since connectivity is fixed up, the shell side remains the same
c - optimize nodeset combining since locint was taking lots of time on some compilers
